datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Category {
  BEACH
  WINDMILL
  MODERN
  COUNTRYSIDE
  POOL
  ISLAND
  LAKE
  SKIING
  CASTLE
  CAMPING
  ARCTIC
  CAVE
  DESERT
  BARN
  LUX
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?

  accounts  Account[]
  listings  Listing[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Listing {
  id            String    @id @default(cuid())
  title          String    @unique
  description          String
  location      String
  hostId        String
  guestCount    Int
  roomCount     Int
  bathroomCount Int
  category      Category
  pricePerNight Float
  isReserved    Boolean?
  images        Image[]
  user          User      @relation(fields: [hostId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([hostId])
  @@index([location])
}

model Image {
  id        String  @id @default(cuid())
  url       String  @unique
  listingId String
  listing   Listing @relation(fields: [listingId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([listingId])
}
